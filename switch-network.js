const fs = require('fs');
const path = require('path');

// Script ƒë·ªÉ chuy·ªÉn ƒë·ªïi gi·ªØa Local v√† Sepolia network

const networks = {
  local: {
    REACT_APP_DEFAULT_CHAIN_ID: '31337',
    REACT_APP_ETHEREUM_RPC_URL: 'http://127.0.0.1:8545',
    description: 'Hardhat Local Network'
  },
  sepolia: {
    REACT_APP_DEFAULT_CHAIN_ID: '11155111',
    REACT_APP_ETHEREUM_RPC_URL: 'https://sepolia.infura.io/v3/2409133a88704cf4a95aa76e6ed2563a',
    description: 'Sepolia Testnet'
  }
};

function updateEnvFile(networkType) {
  const envPath = path.join(__dirname, '.env');
  
  if (!fs.existsSync(envPath)) {
    console.log('‚ùå File .env kh√¥ng t·ªìn t·∫°i');
    return;
  }

  const network = networks[networkType];
  if (!network) {
    console.log('‚ùå Network kh√¥ng h·ª£p l·ªá. S·ª≠ d·ª•ng: local ho·∫∑c sepolia');
    return;
  }

  let envContent = fs.readFileSync(envPath, 'utf8');
  
  // C·∫≠p nh·∫≠t c·∫•u h√¨nh network
  envContent = envContent.replace(
    /REACT_APP_DEFAULT_CHAIN_ID=.*/,
    `REACT_APP_DEFAULT_CHAIN_ID=${network.REACT_APP_DEFAULT_CHAIN_ID}`
  );
  
  envContent = envContent.replace(
    /REACT_APP_ETHEREUM_RPC_URL=.*/,
    `REACT_APP_ETHEREUM_RPC_URL=${network.REACT_APP_ETHEREUM_RPC_URL}`
  );

  fs.writeFileSync(envPath, envContent);
  
  console.log(`‚úÖ ƒê√£ chuy·ªÉn sang ${network.description}`);
  console.log(`üì° Chain ID: ${network.REACT_APP_DEFAULT_CHAIN_ID}`);
  console.log(`üîó RPC URL: ${network.REACT_APP_ETHEREUM_RPC_URL}`);
  
  if (networkType === 'sepolia') {
    console.log('\n‚ö†Ô∏è  L∆∞u √Ω:');
    console.log('- ƒê·∫£m b·∫£o ƒë√£ c·∫≠p nh·∫≠t PRIVATE_KEY cho Sepolia');
    console.log('- C·∫ßn c√≥ Sepolia ETH ƒë·ªÉ deploy');
    console.log('- Ch·∫°y: npx hardhat run scripts/check-sepolia.js --network sepolia');
  } else {
    console.log('\nüí° ƒê·ªÉ s·ª≠ d·ª•ng local network:');
    console.log('- Ch·∫°y: npx hardhat node (trong terminal ri√™ng)');
    console.log('- Deploy: npx hardhat run scripts/deploy.js --network localhost');
  }
  
  console.log('\nüîÑ Restart frontend ƒë·ªÉ √°p d·ª•ng thay ƒë·ªïi');
}

function showCurrentNetwork() {
  const envPath = path.join(__dirname, '.env');
  
  if (!fs.existsSync(envPath)) {
    console.log('‚ùå File .env kh√¥ng t·ªìn t·∫°i');
    return;
  }

  const envContent = fs.readFileSync(envPath, 'utf8');
  const chainIdMatch = envContent.match(/REACT_APP_DEFAULT_CHAIN_ID=(.*)/);  
  const rpcUrlMatch = envContent.match(/REACT_APP_ETHEREUM_RPC_URL=(.*)/);  
  
  if (chainIdMatch && rpcUrlMatch) {
    const chainId = chainIdMatch[1];
    const rpcUrl = rpcUrlMatch[1];
    
    console.log('üìä C·∫•u h√¨nh network hi·ªán t·∫°i:');
    console.log(`üì° Chain ID: ${chainId}`);
    console.log(`üîó RPC URL: ${rpcUrl}`);
    
    if (chainId === '31337') {
      console.log('üè† Network: Hardhat Local');
    } else if (chainId === '11155111') {
      console.log('üåê Network: Sepolia Testnet');
    } else {
      console.log('‚ùì Network: Unknown');
    }
  }
}

function showHelp() {
  console.log('üîß Script chuy·ªÉn ƒë·ªïi network cho NFT Marketplace');
  console.log('\nC√°ch s·ª≠ d·ª•ng:');
  console.log('  node switch-network.js <command>');
  console.log('\nCommands:');
  console.log('  local     - Chuy·ªÉn sang Hardhat Local Network');
  console.log('  sepolia   - Chuy·ªÉn sang Sepolia Testnet');
  console.log('  status    - Hi·ªÉn th·ªã network hi·ªán t·∫°i');
  console.log('  help      - Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n n√†y');
  console.log('\nV√≠ d·ª•:');
  console.log('  node switch-network.js sepolia');
  console.log('  node switch-network.js local');
  console.log('  node switch-network.js status');
}

// Main execution
const command = process.argv[2];

switch (command) {
  case 'local':
    updateEnvFile('local');
    break;
  case 'sepolia':
    updateEnvFile('sepolia');
    break;
  case 'status':
    showCurrentNetwork();
    break;
  case 'help':
  case undefined:
    showHelp();
    break;
  default:
    console.log(`‚ùå Command kh√¥ng h·ª£p l·ªá: ${command}`);
    showHelp();
    break;
}